{
  "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia": {
    "versionSfCore": null,
    "versionFramework": "4.4.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "johan1",
            "app": "quiztopia",
            "service": "quiztopia",
            "frameworkVersion": "4",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev",
              "region": "eu-north-1",
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:BatchWriteItem"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev",
                        "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev/index/UsernameIndex",
                        "arn:aws:dynamodb:eu-north-1:*:table/QuizzesTable-dev",
                        "arn:aws:dynamodb:eu-north-1:*:table/LeaderboardTable-dev"
                      ]
                    }
                  ]
                }
              },
              "environment": {
                "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ApiLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-api"
                    }
                  },
                  "AuthApiLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-authApi"
                    }
                  },
                  "AddQuestionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
                    }
                  },
                  "DeleteQuizLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "quiztopia",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:BatchWriteItem"
                                ],
                                "Resource": [
                                  "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev",
                                  "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev/index/UsernameIndex",
                                  "arn:aws:dynamodb:eu-north-1:*:table/QuizzesTable-dev",
                                  "arn:aws:dynamodb:eu-north-1:*:table/LeaderboardTable-dev"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "quiztopia",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/api.zip"
                      },
                      "Handler": "handler.main",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-api",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ApiLogGroup"
                    ]
                  },
                  "AuthApiLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/authApi.zip"
                      },
                      "Handler": "handler.authHandler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-authApi",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AuthApiLogGroup"
                    ]
                  },
                  "AddQuestionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/addQuestion.zip"
                      },
                      "Handler": "handler.addQuestion",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-addQuestion",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AddQuestionLogGroup"
                    ]
                  },
                  "DeleteQuizLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/deleteQuiz.zip"
                      },
                      "Handler": "handler.deleteQuiz",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-deleteQuiz",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteQuizLogGroup"
                    ]
                  },
                  "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ApiLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AddQuestionLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AuthApiLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteQuizLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-quiztopia",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceRegister": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "register",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "quizzes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "PathPart": "{quizId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarScore": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "score",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarLeaderboard": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "leaderboard",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarQuestions": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "questions",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodRegisterPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRegister"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AuthApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteQuizLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteQuizLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarScorePost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarScore"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AuthApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarLeaderboardGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarLeaderboard"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AuthApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarQuestionsPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarQuestions"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AddQuestionLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AddQuestionLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1728054811633": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodRegisterPost",
                      "ApiGatewayMethodLoginPost",
                      "ApiGatewayMethodQuizzesGet",
                      "ApiGatewayMethodQuizzesQuizidVarGet",
                      "ApiGatewayMethodQuizzesPost",
                      "ApiGatewayMethodQuizzesQuizidVarDelete",
                      "ApiGatewayMethodQuizzesQuizidVarScorePost",
                      "ApiGatewayMethodQuizzesQuizidVarLeaderboardGet",
                      "ApiGatewayMethodQuizzesQuizidVarQuestionsPost",
                      "ApiGatewayMethodQuizzesQuizidVarDelete"
                    ]
                  },
                  "ApiLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthApiLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AuthApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AddQuestionLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AddQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteQuizLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "UsersTable-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "username",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        }
                      ],
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "UsernameIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "username",
                              "KeyType": "HASH"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "QuizzesTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "QuizzesTable-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "quizId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "quizId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "LeaderboardTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "LeaderboardTable-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "quizId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "quizId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "userId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                    "Export": {
                      "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ApiLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-ApiLambdaFunctionQualifiedArn"
                    }
                  },
                  "AddQuestionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
                    }
                  },
                  "AuthApiLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-AuthApiLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteQuizLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "tables": {
                "UsersTable": "UsersTable-dev",
                "QuizzesTable": "QuizzesTable-dev",
                "LeaderboardTable": "LeaderboardTable-dev"
              }
            },
            "package": {
              "individually": true,
              "include": [
                "handlers/**"
              ],
              "artifactsS3KeyDirname": "serverless/quiztopia/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
              "artifactDirectoryName": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z"
            },
            "functions": {
              "api": {
                "handler": "handler.main",
                "events": [
                  {
                    "http": {
                      "path": "register",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "login",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-api",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\api.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k"
              },
              "authApi": {
                "handler": "handler.authHandler",
                "events": [
                  {
                    "http": {
                      "path": "quizzes",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}/score",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}/leaderboard",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-authApi",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\authApi.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0"
              },
              "addQuestion": {
                "handler": "handler.addQuestion",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}/questions",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-addQuestion",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\addQuestion.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA"
              },
              "deleteQuiz": {
                "handler": "handler.deleteQuiz",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-deleteQuiz",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\deleteQuiz.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY"
              }
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "UsersTable-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "username",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ],
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "UsernameIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "username",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "QuizzesTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "QuizzesTable-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "quizId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "quizId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "LeaderboardTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "LeaderboardTable-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "quizId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "quizId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "userId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "johan1",
            "app": "quiztopia",
            "service": "quiztopia",
            "frameworkVersion": "4",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "stage": "dev",
              "region": "eu-north-1",
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:BatchWriteItem"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev",
                        "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev/index/UsernameIndex",
                        "arn:aws:dynamodb:eu-north-1:*:table/QuizzesTable-dev",
                        "arn:aws:dynamodb:eu-north-1:*:table/LeaderboardTable-dev"
                      ]
                    }
                  ]
                }
              },
              "environment": {
                "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ApiLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-api"
                    }
                  },
                  "AuthApiLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-authApi"
                    }
                  },
                  "AddQuestionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
                    }
                  },
                  "DeleteQuizLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "quiztopia",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem",
                                  "dynamodb:BatchWriteItem"
                                ],
                                "Resource": [
                                  "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev",
                                  "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev/index/UsernameIndex",
                                  "arn:aws:dynamodb:eu-north-1:*:table/QuizzesTable-dev",
                                  "arn:aws:dynamodb:eu-north-1:*:table/LeaderboardTable-dev"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "quiztopia",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/api.zip"
                      },
                      "Handler": "handler.main",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-api",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ApiLogGroup"
                    ]
                  },
                  "AuthApiLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/authApi.zip"
                      },
                      "Handler": "handler.authHandler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-authApi",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AuthApiLogGroup"
                    ]
                  },
                  "AddQuestionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/addQuestion.zip"
                      },
                      "Handler": "handler.addQuestion",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-addQuestion",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AddQuestionLogGroup"
                    ]
                  },
                  "DeleteQuizLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                        "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/deleteQuiz.zip"
                      },
                      "Handler": "handler.deleteQuiz",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-deleteQuiz",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteQuizLogGroup"
                    ]
                  },
                  "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ApiLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AddQuestionLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AuthApiLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteQuizLambdaFunction"
                      },
                      "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-quiztopia",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceRegister": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "register",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "quizzes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "PathPart": "{quizId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarScore": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "score",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarLeaderboard": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "leaderboard",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarQuestions": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "questions",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodRegisterPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRegister"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AuthApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteQuizLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteQuizLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarScorePost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarScore"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AuthApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarLeaderboardGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarLeaderboard"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AuthApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarQuestionsPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarQuestions"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AddQuestionLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AddQuestionLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1728054811633": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodRegisterPost",
                      "ApiGatewayMethodLoginPost",
                      "ApiGatewayMethodQuizzesGet",
                      "ApiGatewayMethodQuizzesQuizidVarGet",
                      "ApiGatewayMethodQuizzesPost",
                      "ApiGatewayMethodQuizzesQuizidVarDelete",
                      "ApiGatewayMethodQuizzesQuizidVarScorePost",
                      "ApiGatewayMethodQuizzesQuizidVarLeaderboardGet",
                      "ApiGatewayMethodQuizzesQuizidVarQuestionsPost",
                      "ApiGatewayMethodQuizzesQuizidVarDelete"
                    ]
                  },
                  "ApiLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthApiLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AuthApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AddQuestionLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AddQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteQuizLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "UsersTable-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "username",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        }
                      ],
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "UsernameIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "username",
                              "KeyType": "HASH"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "QuizzesTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "QuizzesTable-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "quizId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "quizId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "LeaderboardTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "LeaderboardTable-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "quizId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "quizId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "userId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                    "Export": {
                      "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ApiLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-ApiLambdaFunctionQualifiedArn"
                    }
                  },
                  "AddQuestionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
                    }
                  },
                  "AuthApiLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-AuthApiLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteQuizLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "tables": {
                "UsersTable": "UsersTable-dev",
                "QuizzesTable": "QuizzesTable-dev",
                "LeaderboardTable": "LeaderboardTable-dev"
              }
            },
            "package": {
              "individually": true,
              "include": [
                "handlers/**"
              ],
              "artifactsS3KeyDirname": "serverless/quiztopia/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
              "artifactDirectoryName": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z"
            },
            "functions": {
              "api": {
                "handler": "handler.main",
                "events": [
                  {
                    "http": {
                      "path": "register",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "login",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-api",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\api.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k"
              },
              "authApi": {
                "handler": "handler.authHandler",
                "events": [
                  {
                    "http": {
                      "path": "quizzes",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}/score",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "quizzes/{quizId}/leaderboard",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-authApi",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\authApi.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0"
              },
              "addQuestion": {
                "handler": "handler.addQuestion",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}/questions",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-addQuestion",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\addQuestion.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA"
              },
              "deleteQuiz": {
                "handler": "handler.deleteQuiz",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-deleteQuiz",
                "package": {
                  "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\deleteQuiz.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY"
              }
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "UsersTable-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "username",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ],
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "UsernameIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "username",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "QuizzesTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "QuizzesTable-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "quizId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "quizId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "LeaderboardTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "LeaderboardTable-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "quizId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "quizId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "userId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "johan1",
      "app": "quiztopia",
      "service": "quiztopia",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "region": "eu-north-1",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:BatchWriteItem"
                ],
                "Resource": [
                  "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev",
                  "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev/index/UsernameIndex",
                  "arn:aws:dynamodb:eu-north-1:*:table/QuizzesTable-dev",
                  "arn:aws:dynamodb:eu-north-1:*:table/LeaderboardTable-dev"
                ]
              }
            ]
          }
        },
        "environment": {
          "DYNAMODB_USERS_TABLE": "UsersTable-dev",
          "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
          "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ApiLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-api"
              }
            },
            "AuthApiLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-authApi"
              }
            },
            "AddQuestionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
              }
            },
            "DeleteQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "quiztopia",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:BatchWriteItem"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev",
                            "arn:aws:dynamodb:eu-north-1:*:table/UsersTable-dev/index/UsernameIndex",
                            "arn:aws:dynamodb:eu-north-1:*:table/QuizzesTable-dev",
                            "arn:aws:dynamodb:eu-north-1:*:table/LeaderboardTable-dev"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "quiztopia",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ApiLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                  "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/api.zip"
                },
                "Handler": "handler.main",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-api",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                    "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                    "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ApiLogGroup"
              ]
            },
            "AuthApiLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                  "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/authApi.zip"
                },
                "Handler": "handler.authHandler",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-authApi",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                    "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                    "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AuthApiLogGroup"
              ]
            },
            "AddQuestionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                  "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/addQuestion.zip"
                },
                "Handler": "handler.addQuestion",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-addQuestion",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                    "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                    "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AddQuestionLogGroup"
              ]
            },
            "DeleteQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
                  "S3Key": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z/deleteQuiz.zip"
                },
                "Handler": "handler.deleteQuiz",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-deleteQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_USERS_TABLE": "UsersTable-dev",
                    "DYNAMODB_QUIZZES_TABLE": "QuizzesTable-dev",
                    "DYNAMODB_LEADERBOARD_TABLE": "LeaderboardTable-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteQuizLogGroup"
              ]
            },
            "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ApiLambdaFunction"
                },
                "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
              }
            },
            "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AddQuestionLambdaFunction"
                },
                "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
              }
            },
            "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AuthApiLambdaFunction"
                },
                "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
              }
            },
            "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteQuizLambdaFunction"
                },
                "CodeSha256": "bjLM3kIIXurkLX1Ui/73/oYwRI4GORy+zaeAtEHIfzs="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-quiztopia",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceRegister": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "register",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceLogin": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "login",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "quizzes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesQuizidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "PathPart": "{quizId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesQuizidVarScore": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "PathPart": "score",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesQuizidVarLeaderboard": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "PathPart": "leaderboard",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesQuizidVarQuestions": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "PathPart": "questions",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodRegisterPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRegister"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodLoginPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AuthApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AuthApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteQuizLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteQuizLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarScorePost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVarScore"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AuthApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AuthApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarLeaderboardGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVarLeaderboard"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AuthApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AuthApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarQuestionsPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVarQuestions"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AddQuestionLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AddQuestionLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1728054811633": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodRegisterPost",
                "ApiGatewayMethodLoginPost",
                "ApiGatewayMethodQuizzesGet",
                "ApiGatewayMethodQuizzesQuizidVarGet",
                "ApiGatewayMethodQuizzesPost",
                "ApiGatewayMethodQuizzesQuizidVarDelete",
                "ApiGatewayMethodQuizzesQuizidVarScorePost",
                "ApiGatewayMethodQuizzesQuizidVarLeaderboardGet",
                "ApiGatewayMethodQuizzesQuizidVarQuestionsPost",
                "ApiGatewayMethodQuizzesQuizidVarDelete"
              ]
            },
            "ApiLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AuthApiLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AuthApiLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AddQuestionLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AddQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteQuizLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UsersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "UsersTable-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "username",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  }
                ],
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "UsernameIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "username",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "QuizzesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "QuizzesTable-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "quizId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "quizId",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "LeaderboardTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "LeaderboardTable-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "quizId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "quizId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "userId",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
              "Export": {
                "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
              }
            },
            "ApiLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-ApiLambdaFunctionQualifiedArn"
              }
            },
            "AddQuestionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
              }
            },
            "AuthApiLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-AuthApiLambdaFunctionQualifiedArn"
              }
            },
            "DeleteQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-quiztopia-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "custom": {
        "tables": {
          "UsersTable": "UsersTable-dev",
          "QuizzesTable": "QuizzesTable-dev",
          "LeaderboardTable": "LeaderboardTable-dev"
        }
      },
      "package": {
        "individually": true,
        "include": [
          "handlers/**"
        ],
        "artifactsS3KeyDirname": "serverless/quiztopia/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
        "artifactDirectoryName": "serverless/quiztopia/dev/1728054823307-2024-10-04T15:13:43.307Z"
      },
      "functions": {
        "api": {
          "handler": "handler.main",
          "events": [
            {
              "http": {
                "path": "register",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "login",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "quizzes",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "quizzes/{quizId}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-api",
          "package": {
            "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\api.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ApiLambdaVersionPWfZb4UVRnd7YVkSJviXHYqP5ZJ1MFTkJHHaZ3Iik9k"
        },
        "authApi": {
          "handler": "handler.authHandler",
          "events": [
            {
              "http": {
                "path": "quizzes",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "quizzes/{quizId}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "quizzes/{quizId}/score",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "quizzes/{quizId}/leaderboard",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-authApi",
          "package": {
            "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\authApi.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AuthApiLambdaVersionemoDVwJxtq76AL7TOVsHe66ihPVQA36frvCa5hzdH0"
        },
        "addQuestion": {
          "handler": "handler.addQuestion",
          "events": [
            {
              "http": {
                "path": "quizzes/{quizId}/questions",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-addQuestion",
          "package": {
            "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\addQuestion.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AddQuestionLambdaVersionRyQxewNDczdU01MkTxWfeHihXqrq6z0UoS4GHCcIuA"
        },
        "deleteQuiz": {
          "handler": "handler.deleteQuiz",
          "events": [
            {
              "http": {
                "path": "quizzes/{quizId}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-deleteQuiz",
          "package": {
            "artifact": "C:\\Users\\johan\\Desktop\\BackEnd.fd\\Quiztopia\\.serverless\\deleteQuiz.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteQuizLambdaVersionFzdGeqtZyGcorGvnB3Omc2mXR3bPbebSjUhZ9hlcjY"
        }
      },
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "UsersTable-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UsernameIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "QuizzesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "QuizzesTable-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "quizId",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "LeaderboardTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "LeaderboardTable-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "userId",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "org: johan1\r\napp: quiztopia\r\nservice: quiztopia\r\n\r\nframeworkVersion: \"4\"\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  stage: dev\r\n  region: eu-north-1\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:Query\r\n            - dynamodb:Scan\r\n            - dynamodb:GetItem\r\n            - dynamodb:PutItem\r\n            - dynamodb:UpdateItem\r\n            - dynamodb:DeleteItem\r\n            - dynamodb:BatchWriteItem\r\n          Resource:\r\n            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tables.UsersTable}\r\n            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tables.UsersTable}/index/UsernameIndex\r\n            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tables.QuizzesTable}\r\n            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tables.LeaderboardTable}\r\n\r\n  environment:\r\n    DYNAMODB_USERS_TABLE: ${self:custom.tables.UsersTable}\r\n    DYNAMODB_QUIZZES_TABLE: ${self:custom.tables.QuizzesTable}\r\n    DYNAMODB_LEADERBOARD_TABLE: ${self:custom.tables.LeaderboardTable}\r\n\r\ncustom:\r\n  tables:\r\n    UsersTable: \"UsersTable-${sls:stage}\"\r\n    QuizzesTable: \"QuizzesTable-${sls:stage}\"\r\n    LeaderboardTable: \"LeaderboardTable-${sls:stage}\"\r\n\r\npackage:\r\n  individually: true\r\n  include:\r\n    - handlers/**\r\n\r\nfunctions:\r\n  api:\r\n    handler: handler.main\r\n    events:\r\n      - http:\r\n          path: /register\r\n          method: POST\r\n      - http:\r\n          path: /login\r\n          method: POST\r\n      - http:\r\n          path: /quizzes\r\n          method: GET\r\n      - http:\r\n          path: /quizzes/{quizId}\r\n          method: GET\r\n  authApi:\r\n    handler: handler.authHandler\r\n    events:\r\n      - http:\r\n          path: /quizzes\r\n          method: POST\r\n      - http:\r\n          path: /quizzes/{quizId}\r\n          method: DELETE\r\n      - http:\r\n          path: /quizzes/{quizId}/score\r\n          method: POST\r\n      - http:\r\n          path: /quizzes/{quizId}/leaderboard\r\n          method: GET\r\n  addQuestion:\r\n    handler: handler.addQuestion\r\n    events:\r\n      - http:\r\n          path: /quizzes/{quizId}/questions\r\n          method: POST\r\n  deleteQuiz:\r\n    handler: handler.deleteQuiz\r\n    events:\r\n      - http:\r\n          path: /quizzes/{quizId}\r\n          method: DELETE\r\nresources:\r\n  Resources:\r\n    UsersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.tables.UsersTable}\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n          - AttributeName: username\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: UsernameIndex\r\n            KeySchema:\r\n              - AttributeName: username\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n        BillingMode: PAY_PER_REQUEST\r\n\r\n    QuizzesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.tables.QuizzesTable}\r\n        AttributeDefinitions:\r\n          - AttributeName: quizId\r\n            AttributeType: S\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n          - AttributeName: quizId\r\n            KeyType: RANGE\r\n        BillingMode: PAY_PER_REQUEST\r\n\r\n    LeaderboardTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.tables.LeaderboardTable}\r\n        AttributeDefinitions:\r\n          - AttributeName: quizId\r\n            AttributeType: S\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: quizId\r\n            KeyType: HASH\r\n          - AttributeName: userId\r\n            KeyType: RANGE\r\n        BillingMode: PAY_PER_REQUEST\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "1e216d538897f70853501d1f603b3883",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "8f602774-07b4-49f0-a6ae-eb440ef59109",
    "orgName": "johan1",
    "userId": "YfrldT2N0yD3qbG0z4",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "wBYBBHbMbRnkcrLvzr",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "johan1",
    "subscription": null,
    "userEmail": "johan.skoog.1986@gmail.com",
    "serviceProviderAwsRegion": "eu-north-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "503561443116",
    "projectType": "traditional",
    "versionSf": "4.4.4",
    "serviceProviderAwsCfStackName": "quiztopia-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-north-1:503561443116:stack/quiztopia-dev/73d702d0-80ed-11ef-9f6a-068092d2d7b5",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:503561443116:stack/quiztopia-dev/73d702d0-80ed-11ef-9f6a-068092d2d7b5",
    "serviceProviderAwsCfStackCreated": "2024-10-02T18:38:01.176Z",
    "serviceProviderAwsCfStackUpdated": "2024-10-04T15:14:00.688Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:503561443116:function:quiztopia-dev-deleteQuiz:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AuthApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:503561443116:function:quiztopia-dev-authApi:35",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-AuthApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:503561443116:function:quiztopia-dev-api:64",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AddQuestionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:503561443116:function:quiztopia-dev-addQuestion:13",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://n78haosocj.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-quiztopia-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-a60f574d-0a13",
        "ExportName": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}